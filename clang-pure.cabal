cabal-version:         2.2
name:                  clang-pure
version:               0.2.0.5
synopsis:              Pure C++ code analysis with libclang
description:
  Pure C++ code analysis with libclang.
  .
  Refer to <http://clang.llvm.org/doxygen/group__CINDEX.html libclang's documentation> for usage.
  In general, the naming scheme is @clang_getCursorType -> cursorType@, @CXCursor -> `Cursor`@.
license:               Apache-2.0
license-file:          LICENSE
author:                Patrick Chilton
maintainer:            chpatrick@gmail.com
copyright:             Copyright 2014 Google Inc. All Rights Reserved.
category:              Language
build-type:            Custom
extra-source-files:    cbits/clang-pure-utils.h

custom-setup
  setup-depends:
    base >= 4.5 && < 5,
    Cabal >= 1.24,
    process >= 1.3.0.0,
    inline-c

source-repository head
  type: git
  location: https://github.com/chpatrick/clang-pure.git

library
  exposed-modules:     Language.C.Clang,
                       Language.C.Clang.Cursor,
                       Language.C.Clang.Cursor.Typed,
                       Language.C.Clang.File,
                       Language.C.Clang.Location,
                       Language.C.Clang.Token,
                       Language.C.Clang.TranslationUnit,
                       Language.C.Clang.Type

  other-modules:       Language.C.Clang.Internal.Context,
                       Language.C.Clang.Internal.FFI,
                       Language.C.Clang.Internal.Refs,
                       Language.C.Clang.Internal.Types

  default-extensions:  TypeFamilies,
                       GeneralizedNewtypeDeriving,
                       TemplateHaskell,
                       QuasiQuotes,
                       OverloadedStrings,
                       LambdaCase,
                       NamedFieldPuns,
                       StandaloneDeriving,
                       FlexibleContexts

  build-depends:       base >=4.8 && < 5,
                       bytestring >= 0.10.8 && < 0.11,
                       containers >= 0.6.0 && < 0.7,
                       contravariant >= 1.5.2 && < 1.6,
                       stm >= 2.5.0 && < 2.6,
                       inline-c >= 0.7.0 && < 0.8,
                       template-haskell >= 2.14.0 && < 2.15,
                       vector >= 0.12.0 && < 0.13,
                       microlens >= 0.4.10 && < 0.5,
                       microlens-contra >= 0.1.0 && < 0.2,
                       singletons >= 2.5.1 && < 2.6

  hs-source-dirs:      src
  build-tool-depends:  hsc2hs:hsc2hs >= 0.68
  default-language:    Haskell2010

  include-dirs:        cbits/
  includes:            clang-c/Index.h
  cc-options:          -Wall -Werror

  extra-libraries:     clang

  ghc-options:         -Wall

  if impl(ghc >= 8.0.0)
    ghc-options: -fno-warn-redundant-constraints

executable find-classes
  main-is:             FindClasses.hs
  default-language:    Haskell2010
  build-depends:       base, clang-pure, lens, unordered-containers, hashable, bytestring
  hs-source-dirs:      app
  buildable:           False
  ghc-options:         -Wall -fno-warn-orphans
  if impl(ghc >= 8.0.0)
    ghc-options: -fno-warn-redundant-constraints

test-suite list-fun-types
  type:                exitcode-stdio-1.0
  main-is:             ListTypes.hs
  default-language:    Haskell2010
  build-depends:       base, clang-pure, lens, bytestring
  hs-source-dirs:      examples
  ghc-options:         -Wall
  if impl(ghc >= 8.0.0)
    ghc-options: -fno-warn-redundant-constraints

test-suite list-structs
  type:                exitcode-stdio-1.0
  default-language:    Haskell2010
  main-is:             ListStructs.hs
  build-depends:       base, clang-pure, lens, bytestring
  hs-source-dirs:      examples
  ghc-options:         -Wall
  if impl(ghc >= 8.0.0)
    ghc-options: -fno-warn-redundant-constraints
